name: Update Version on PR to Main

on:
  pull_request:
    types: [opened, reopened]
    branches: [ "main", "dev" ]

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Get current version
        id: get_version
        run: |
          version=$(tr -d '\n' < version.txt)
          echo "Detected version: '$version'"
          echo "current_version=$version" >> $GITHUB_OUTPUT

      - name: Update version and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

          CURRENT_VERSION="${{ steps.get_version.outputs.current_version }}"
          NEW_VERSION=$CURRENT_VERSION

          # Determine version bump based on branch types
          if [[ "${{ github.base_ref }}" == "main" && "${{ github.head_ref }}" =~ ^release/.* ]]; then
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{ $1++; $2=0; $3=0; print }' OFS=".")
          elif [[ "${{ github.base_ref }}" == "dev" && "${{ github.head_ref }}" =~ ^feat/.* ]]; then
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{ $2++; $3=0; print }' OFS=".")
          elif [[ "${{ github.base_ref }}" == "dev" && "${{ github.head_ref }}" =~ ^hotfix/.* ]]; then
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{ $3++; print }' OFS=".")
          fi

          if [[ "$NEW_VERSION" != "$CURRENT_VERSION" ]]; then
            echo "üîÑ Updating version from $CURRENT_VERSION to $NEW_VERSION"
            ./scripts/update_version.sh "$NEW_VERSION"

            git add version.txt
            git commit -m "üöÄ Bump version: $NEW_VERSION [skip ci]"
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "‚è© No version update needed"
          fi